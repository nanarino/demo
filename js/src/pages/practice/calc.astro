---
import Layout from "src/layout.astro"
---

<Layout title="計算器">
    <script>
        window.onload = function () {
            const num = document.getElementsByClassName(
                "num"
            ) as HTMLCollectionOf<HTMLButtonElement>
            const btn = document.getElementsByClassName(
                "btn"
            ) as HTMLCollectionOf<HTMLButtonElement>
            const [vw, vwH] = document.getElementsByClassName("output")
            for (const n of num) {
                n.onclick = function () {
                    vw.innerHTML += n.innerText
                }
            }
            btn[0].onclick = function () {
                vw.innerHTML = vw.innerHTML.slice(0, -1)
            }
            btn[1].onclick = function () {
                location.reload() //刷新页面
            }
            btn[2].onclick = function () {
                if (vw.innerHTML.indexOf("%") !== -1) {
                    //这个百分数结果并不能在下次运算中使用 除非退格删掉
                    vw.innerHTML = "error"
                } else if (vw.innerHTML.indexOf("e") !== -1) {
                    //error没删干净 强制刷新
                    location.reload()
                } else {
                    vwH.innerHTML = vw.innerHTML + "×100%"
                    vw.innerHTML = Number.parseFloat(vw.innerHTML) * 100 + "%"
                }
            }
            btn[3].onclick = function () {
                if (vw.innerHTML.indexOf("%") !== -1) {
                    //这个百分数结果并不能在下次运算中使用 除非退格删掉
                    vw.innerHTML = "error"
                } else if (vw.innerHTML.indexOf("e") !== -1) {
                    //error没删干净 强制刷新
                    location.reload()
                } else {
                    vwH.innerHTML = "sqrt(" + vw.innerHTML + ")"
                    vw.innerHTML = `${Number.parseFloat(vw.innerHTML) ** 0.5}`
                }
            }
            type OP = "×" | "÷" | "＋" | "－"

            function computed(op: OP, numA: number, numB: number) {
                //定义中文及自定义运算符号
                switch (op) {
                    case "＋":
                        return numA + numB

                    case "－":
                        return numA - numB

                    case "×":
                        return numA * numB

                    case "÷":
                        return numA / numB

                    //default:
                }
            }
            function evaluation(arr: string[], s = 0, e = arr.length) {
                let arr2: (string | number)[] = arr.slice(s, e)
                let symArr1 = arr2.filter((z: OP) => z === "×" || z === "÷")
                let symArr2 = arr2.filter((z: OP) => z === "＋" || z === "－")
                while (1) {
                    const op = symArr1.shift() || symArr2.shift()
                    if (!op) break
                    const idx = arr2.indexOf(op)
                    const n1 = arr2[idx - 1]
                    const n2 = arr2[idx + 1]
                    const res = computed(
                        op,
                        typeof n1 === "number" ? n1 : Number.parseFloat(n1),
                        typeof n2 === "number" ? n2 : Number.parseFloat(n2)
                    )
                    arr2.splice(idx - 1, 3, res)
                }
                return arr2.shift()
            }
            btn[18].onclick = function () {
                vwH.innerHTML = vw.innerHTML
                if (vw.innerHTML.indexOf("%") !== -1) {
                    //这个百分数结果并不能在下次运算中使用 除非退格删掉
                    vw.innerHTML = "error"
                } else if (vw.innerHTML.indexOf("I") !== -1) {
                    //Infinity没删干净 强制刷新
                    location.reload()
                } else if (vw.innerHTML.indexOf("e") !== -1) {
                    //error没删干净 强制刷新
                    location.reload()
                } else if (vw.innerHTML.indexOf("N") !== -1) {
                    //NaN没删干净 强制刷新
                    location.reload()
                } else {
                    vw.innerHTML = vw.innerHTML
                        .replace(/\＋/g, ",＋,")
                        .replace(/\－/g, ",－,")
                        .replace(/\×/g, ",×,")
                        .replace(/\÷/g, ",÷,")
                    vw.innerHTML = `${evaluation(vw.innerHTML.split(","))}`
                }
            }
        }
    </script>
    <div class="frame">
        <div class="numberOutput">
            <p class="output"></p>
            <p class="output"></p>
        </div>
        <!--禁止文本被拖拽或双击选中-->
        <div
            class="numberInput"
            onselectstart="return false"
            ondragstart="return false"
        >
            <ul>
                <li class="btn">←</li>
                <li class="btn">C</li>
                <li class="btn">%</li>
                <li class="btn">√</li>
                <li class="num btn">7</li>
                <li class="num btn">8</li>
                <li class="num btn">9</li>
                <li class="num btn">÷</li>
                <li class="num btn">4</li>
                <li class="num btn">5</li>
                <li class="num btn">6</li>
                <li class="num btn">×</li>
                <li class="num btn">1</li>
                <li class="num btn">2</li>
                <li class="num btn">3</li>
                <li class="num btn">－</li>
                <li class="num btn">0</li>
                <li class="num btn">.</li>
                <li class="btn">＝</li>
                <li class="num btn">＋</li>
            </ul>
        </div>
    </div>
</Layout>
<style>
    * {
        margin: 0;
        padding: 0;
        text-decoration: none;
        list-style: none;
    }

    body {
        background-color: #eee;
    }

    .frame {
        width: 500px;
        height: 600px;
        margin: 50px auto;
        background-color: #ccc;
        box-shadow: 0 0 10px #000;
        padding: 4px;
        border-radius: 6px;
        font-family: "Courier New", Courier, monospace;
    }

    .numberOutput {
        width: 498px;
        background-color: #eee;
    }

    .numberOutput p {
        display: flex;
        flex-direction: row-reverse;
        font-size: 48px;
        overflow-y: hidden;
        height: 75px;
    }

    .numberInput {
        float: left;
        width: 500px;
        height: 360px;
        background-color: #fff;
    }

    .numberInput li {
        float: left;
        width: 121px;
        line-height: 86px;
        text-align: center;
        font-size: 35px;
        background-color: #aaa;
        border: 2px solid #ccc;
        cursor: pointer;
    }

    .numberInput li:hover {
        background-color: #ccc;
    }
</style>
