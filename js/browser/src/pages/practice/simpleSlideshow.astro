<!doctype html>
<html>
    <head>
        <meta http-equiv="Pragma" content="no-cache" />
        <meta http-equiv="Cache-Control" content="no-cache" />
        <meta http-equiv="Expires" content="0" />
        <style>
            * {
                margin: 0px;
                text-decoration: none;
            }

            #container {
                width: 500px;
                height: 500px;
                position: relative;
                border: 3px solid #333;
                overflow: hidden;
                margin: 0 auto;
            }

            #list {
                width: 1500px;
                height: 500px;
                position: absolute;
                z-index: 1;
            }

            #list img {
                float: left;
                width: 500px;
                height: 500px;
            }

            .arrow {
                cursor: pointer;
                display: none;
                line-height: 35px;
                text-align: center;
                font-size: 36px;
                font-weight: bold;
                width: 40px;
                height: 40px;
                border: 1px solid white;
                border-radius: 50%;
                position: absolute;
                z-index: 2;
                top: 220px;
                background-color: RGBA(0, 0, 0, 0.3);
                color: #fff;
            }

            .arrow:hover {
                background-color: RGBA(0, 0, 0, 0.7);
            }

            #container:hover .arrow {
                display: block;
            }

            #prev {
                left: 20px;
            }

            #next {
                right: 20px;
            }

            #buttons {
                position: absolute;
                height: 10px;
                width: 80px;
                z-index: 2;
                bottom: 20px;
                left: 216px;
            }

            #buttons span {
                float: left;
                border: 1px solid #fff;
                width: 10px;
                height: 10px;
                border-radius: 10px;
                background: #333;
                margin-right: 5px;
                cursor: pointer;
            }

            #buttons .on {
                background: orangered;
            }
        </style>
        <script is:inline>
            function mod(n, m) {
                //取模算法
                return ((n % m) + m) % m
            }
            function throttle(fn, wait) {
                //节流函数（时间戳）
                var pre = Date.now()
                return function () {
                    var context = this
                    var args = arguments
                    var now = Date.now()
                    if (now - pre >= wait) {
                        fn.apply(context, args)
                        pre = Date.now()
                    }
                }
            }
            const imgSrcList = [
                //图片url列表
                `https://raw.githubusercontent.com/twitter/twemoji/master/assets/svg/1f004.svg`,
                `https://raw.githubusercontent.com/twitter/twemoji/master/assets/svg/1f0cf.svg`,
                `https://raw.githubusercontent.com/twitter/twemoji/master/assets/svg/1f170.svg`,
                `https://raw.githubusercontent.com/twitter/twemoji/master/assets/svg/1f19a.svg`,
            ]

            const imgLength = imgSrcList.length

            window.onload = async () => {
                const container = document.getElementById("container")
                const list = document.getElementById("list")
                const buttons = document
                    .getElementById("buttons")
                    .getElementsByTagName("span")
                const imglist = list.getElementsByTagName("img")
                const pre = document.getElementById("prev")
                const next = document.getElementById("next")
                const timeout = 240 //过渡+停顿总时间
                let index

                function run(n) {
                    n++
                    return new Promise((resolve, reject) => {
                        setTimeout(function () {
                            list.style.transition = ".2s"
                            list.style.left = -500 * n + "px"
                            resolve()
                        }, 38)
                    })
                }

                function resetSrc(n) {
                    return new Promise((resolve, reject) => {
                        setTimeout(function () {
                            list.style.transition = ""
                            list.style.left = "-500px"
                            imglist[0].src = imgSrcList[mod(n - 1, imgLength)]
                            imglist[1].src = imgSrcList[mod(n, imgLength)]
                            imglist[2].src = imgSrcList[mod(n + 1, imgLength)]
                            resolve()
                        }, 212)
                    })
                }

                const nextonclick = async () => {
                    buttons[mod(index, imgLength)].className = ""
                    await run(+1)
                    index++
                    buttons[mod(index, imgLength)].className = "on"
                    await resetSrc(index)
                }

                const preonclick = async () => {
                    buttons[mod(index, imgLength)].className = ""
                    await run(-1)
                    index--
                    buttons[mod(index, imgLength)].className = "on"
                    await resetSrc(index)
                }

                window.timer = null
                function play() {
                    timer = setInterval(function () {
                        nextonclick()
                    }, 2500)
                }
                function stop() {
                    clearInterval(timer)
                }

                void (function init() {
                    index = 0
                    imglist[0].src = imgSrcList[imgLength - 1]
                    imglist[1].src = imgSrcList[0]
                    imglist[2].src = imgSrcList[1]
                    list.style.left = "-500px"
                    next.onclick = throttle(nextonclick, timeout)
                    pre.onclick = throttle(preonclick, timeout)
                    for (let i = 0; i < imgLength; i++) {
                        buttons[i].onclick = throttle(async () => {
                            var t = 0
                            if ((t = i - mod(index, imgLength)) > 0) {
                                t = Math.abs(t)
                                while (t--) {
                                    await nextonclick()
                                }
                            } else {
                                t = Math.abs(t)
                                while (t--) {
                                    await preonclick()
                                }
                            }
                        }, timeout * 3)
                    }
                    container.onmouseenter = stop
                    container.onmouseleave = play
                    play()
                })()
            }
        </script>
    </head>

    <body ondragstart="return false">
        <div id="container">
            <div id="list">
                <img src="" alt="" srcset="" />
                <img src="" alt="" srcset="" />
                <img src="" alt="" srcset="" />
            </div>
            <div id="buttons">
                <span class="on"> </span>
                <span></span>
                <span></span>
                <span></span>
            </div>
            <a href="javascript:;" class="arrow" id="prev">&lt;</a>
            <a href="javascript:;" class="arrow" id="next">&gt;</a>
        </div>
    </body>
</html>
