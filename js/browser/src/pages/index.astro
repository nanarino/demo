---
import Menu from "../components/menu.astro";
import fs from "fs";
import path from "path";
import { promisify } from "util";
import type { page, menu } from "../types";

const stat = promisify(fs.stat);
const readDir = promisify(fs.readdir);
const getMenu = async (
	currentDir: string,
	rootDir: string = currentDir,
): Promise<(page | menu)[]> => {
	const children: (page | menu)[] = [];
	if ((await stat(path.resolve(currentDir))).isFile()) return [];
	for (const fileName of await readDir(currentDir)) {
		if (fileName?.[0] === ".") continue;
		const filePath = path.join(currentDir, fileName);
		children.push({
			path: path
				.relative(rootDir, filePath)
				.split(path.sep)
				.join(path.posix.sep)
				.replace(/index\.astro$/i, "")
				.replace(/\.astro$/i, ""),
			...((await stat(filePath)).isFile()
				? null
				: { children: await getMenu(filePath, rootDir) }),
		});
	}
	return children;
};

const menu = await getMenu("./src/pages");
---

<meta charset="utf-8">
<Menu menu={menu} />
